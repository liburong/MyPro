{"remainingRequest":"C:\\Users\\liburong\\Desktop\\MyVue3(最新)\\MyVue3(最新)\\MyVue3\\MyVue\\MyVue\\MyVue\\MyVue\\market_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\liburong\\Desktop\\MyVue3(最新)\\MyVue3(最新)\\MyVue3\\MyVue\\MyVue\\MyVue\\MyVue\\market_vue\\src\\main.js","dependencies":[{"path":"C:\\Users\\liburong\\Desktop\\MyVue3(最新)\\MyVue3(最新)\\MyVue3\\MyVue\\MyVue\\MyVue\\MyVue\\market_vue\\src\\main.js","mtime":1564674674766},{"path":"C:\\Users\\liburong\\Desktop\\MyVue3(最新)\\MyVue3(最新)\\MyVue3\\MyVue\\MyVue\\MyVue\\MyVue\\market_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\liburong\\Desktop\\MyVue3(最新)\\MyVue3(最新)\\MyVue3\\MyVue\\MyVue\\MyVue\\MyVue\\market_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"C:\\\\Users\\\\liburong\\\\Desktop\\\\MyVue3(\\u6700\\u65B0)\\\\MyVue3(\\u6700\\u65B0)\\\\MyVue3\\\\MyVue\\\\MyVue\\\\MyVue\\\\MyVue\\\\market_vue\\\\node_modules\\\\core-js\\\\modules\\\\es6.array.iterator.js\";\nimport \"C:\\\\Users\\\\liburong\\\\Desktop\\\\MyVue3(\\u6700\\u65B0)\\\\MyVue3(\\u6700\\u65B0)\\\\MyVue3\\\\MyVue\\\\MyVue\\\\MyVue\\\\MyVue\\\\market_vue\\\\node_modules\\\\core-js\\\\modules\\\\es6.promise.js\";\nimport \"C:\\\\Users\\\\liburong\\\\Desktop\\\\MyVue3(\\u6700\\u65B0)\\\\MyVue3(\\u6700\\u65B0)\\\\MyVue3\\\\MyVue\\\\MyVue\\\\MyVue\\\\MyVue\\\\market_vue\\\\node_modules\\\\core-js\\\\modules\\\\es6.object.assign.js\";\nimport \"C:\\\\Users\\\\liburong\\\\Desktop\\\\MyVue3(\\u6700\\u65B0)\\\\MyVue3(\\u6700\\u65B0)\\\\MyVue3\\\\MyVue\\\\MyVue\\\\MyVue\\\\MyVue\\\\market_vue\\\\node_modules\\\\core-js\\\\modules\\\\es7.promise.finally.js\";\nimport Vue from 'vue';\nimport App from \"./App.vue\";\nimport router from \"./router\";\nimport VueAwesomeSwiper from 'vue-awesome-swiper'; // import BScroll from './better-scroll'\n//以上三行不要动保存原来位置\n//原因：引入有序\n//第三方组件库在下面引入\n//1：完整引入mint-ui\n\nimport MintUI from 'mint-ui'; //2:单引引入mint-ui样式\n\nimport 'mint-ui/lib/style.css'; //3:将mint-ui注册vue\n\nVue.use(MintUI); //完整引入element-ui\n\nimport ElementUI from 'element-ui'; //2:单引引入element-ui样式\n\nimport 'element-ui/lib/theme-chalk/index.css'; //3:将element-ui注册vue\n\nVue.use(ElementUI); //使用swiper\n\nVue.use(VueAwesomeSwiper);\nimport 'swiper/dist/css/swiper.css';\nimport { swiper, swiperSlide } from 'vue-awesome-swiper'; //引入移动端适配插件\n\nimport 'lib-flexible'; //引入验证码插件\n//4.引入图标字体样式文件\n//import \"./font/iconfont.css\"\n//5.引入axios.js文件\n\nimport axios from \"./axios\"; //6.引入vuex\n\nimport Vuex from \"vuex\"; //7.注册vuex组件\n\nVue.use(Vuex); //8.创建Vuex实例对象：store\n\nvar key = \"user\";\nvar store = new Vuex.Store({\n  //vuex中全局共享的数据,要存的初始数据 \n  //state => 存储初始化的 所存 变量 或 数组\n  state: {\n    user: null,\n    cartCount: 0,\n    //设置属性\n    isLogin: false\n  },\n  //通过mutations修改vuex中全局共享的数据\n  //设置属性状态  \n  //mutation => 改变数据状态，对数据的修改，封装为方法、函数，存入 mutation\n  mutations: {\n    //设置数据进入localStorage\n    _setStorage: function _setStorage(state, value) {\n      state.user = value;\n      localStorage.setItem(key, JSON.stringify(value)); //localStorage.setItem(key,数据值)设置存入缓存\n    },\n    _removeStorage: function _removeStorage(state) {\n      state.user = null;\n      localStorage.removeItem(key); //删除缓存\n    },\n    clear: function clear(state) {\n      state.cartCount = 0;\n    },\n    //购物车数量+1\n    increment: function increment(state) {\n      state.cartCount++;\n    },\n    //购物车数量增加指定值\n    updateCount: function updateCount(state) {\n      state.cartCount += c;\n    }\n  },\n  //获取vuex中全局共享的数据\n  //获取数据\n  //getter => 读取数据 通过传入 state.xxx 对方法、函数获取\n  getters: {\n    //获取登录状态\n    getStorage: function getStorage(state) {\n      if (!state.user) {\n        state.user = JSON.parse(localStorage.getItem(key)); //获取缓存中的数据\n      }\n\n      return state.user;\n    },\n    getCartCount: function getCartCount(state) {\n      return state.cartCount;\n    }\n  },\n  //应用mutations\n  actions: {}\n}); //vuex中全局共享的数据 \n// state:{cartCount:0},\n// //修改vuex中全局共享的数据\n//   mutations:{\n//     clear(state){\n//       state.cartCount = 0;\n//     },\n//   //购物车数量+1\n//     increment(state){\n//       state.cartCount++;\n//     },\n//   //购物车数量增加指定值\n//     updateCount(state){\n//       state.cartCount+=c;\n//     }\n//   },\n// //获取vuex中全局共享的数据\n//   getters:{\n//     getCartCount:function(state){\n//       return state.cartCount;\n//     }\n//   }\n// //验证登录\n// router.beforeEach((to,from,next)=>{\n//   //获取用户登录成功后存储的登录标志\n//   let getFlag=localStorage.getItem(\"Flag\");\n//   //如果登录标志存在且为isLogin,即用户已登录\n//   if(getFlag===\"isLogin\"){\n//     //设置vuex登录状态为已登录\n//     store.state.isLogin=true\n//     next()\n//     //如果已登录，还想进入登录注册界面，则定向会首页\n//     if(!to.meta.isLogin){\n//      //友好提示\n//     //  iView.Message.error('请先退出登录')\n//      next({\n//        path:'/Center'\n//      })\n//     }\n//   }else{\n//     //如果登录标志不存在，即未登录\n//     //用户想进入需要登录的页面，则定向回登录界面\n//     if(to.meta.isLogin){\n//      next({\n//        path:'Login'\n//      })\n//     }else{//进入无需登录的界面，则跳转继续\n//       next()\n//     }\n//   }\n// });\n//9.将store保存在vue实例中\n\nVue.config.productionTip = false;\nnew Vue({\n  router: router,\n  store: store,\n  render: function render(h) {\n    return h(App);\n  }\n}).$mount('#app');",{"version":3,"sources":["C:\\Users\\liburong\\Desktop\\MyVue3(最新)\\MyVue3(最新)\\MyVue3\\MyVue\\MyVue\\MyVue\\MyVue\\market_vue\\src\\main.js"],"names":["Vue","App","router","VueAwesomeSwiper","MintUI","use","ElementUI","swiper","swiperSlide","axios","Vuex","key","store","Store","state","user","cartCount","isLogin","mutations","_setStorage","value","localStorage","setItem","JSON","stringify","_removeStorage","removeItem","clear","increment","updateCount","c","getters","getStorage","parse","getItem","getCartCount","actions","config","productionTip","render","h","$mount"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport  VueAwesomeSwiper from 'vue-awesome-swiper'\r\n// import BScroll from './better-scroll'\r\n//以上三行不要动保存原来位置\r\n//原因：引入有序\r\n//第三方组件库在下面引入\r\n//1：完整引入mint-ui\r\nimport MintUI from 'mint-ui'\r\n//2:单引引入mint-ui样式\r\nimport'mint-ui/lib/style.css'\r\n//3:将mint-ui注册vue\r\nVue.use(MintUI);\r\n//完整引入element-ui\r\nimport ElementUI from 'element-ui';\r\n//2:单引引入element-ui样式\r\nimport 'element-ui/lib/theme-chalk/index.css';\r\n//3:将element-ui注册vue\r\nVue.use(ElementUI);\r\n//使用swiper\r\nVue.use(VueAwesomeSwiper)\r\nimport 'swiper/dist/css/swiper.css'\r\nimport {swiper,swiperSlide} from 'vue-awesome-swiper'\r\n//引入移动端适配插件\r\nimport 'lib-flexible'\r\n//引入验证码插件\r\n\r\n//4.引入图标字体样式文件\r\n//import \"./font/iconfont.css\"\r\n//5.引入axios.js文件\r\nimport axios from \"./axios\"\r\n//6.引入vuex\r\nimport Vuex from \"vuex\"\r\n//7.注册vuex组件\r\nVue.use(Vuex)\r\n//8.创建Vuex实例对象：store\r\nconst key=\"user\"\r\n\r\nvar store=new Vuex.Store({\r\n  //vuex中全局共享的数据,要存的初始数据 \r\n//state => 存储初始化的 所存 变量 或 数组\r\nstate: {\r\n  user:null,\r\n  cartCount:0,\r\n  //设置属性\r\n  isLogin:false,\r\n },\r\n//通过mutations修改vuex中全局共享的数据\r\n //设置属性状态  \r\n  //mutation => 改变数据状态，对数据的修改，封装为方法、函数，存入 mutation\r\n mutations:{\r\n  //设置数据进入localStorage\r\n   _setStorage(state,value){\r\n     state.user=value\r\n     localStorage.setItem(key,JSON.stringify(value))\r\n     //localStorage.setItem(key,数据值)设置存入缓存\r\n   },\r\n   _removeStorage(state){\r\n     state.user=null\r\n     localStorage.removeItem(key) //删除缓存\r\n   },\r\n  clear(state){\r\n    state.cartCount = 0;\r\n  },\r\n//购物车数量+1\r\n   increment(state){\r\n      state.cartCount++;\r\n   },\r\n//购物车数量增加指定值\r\n  updateCount(state){\r\n   state.cartCount+=c;\r\n  }\r\n },\r\n//获取vuex中全局共享的数据\r\n //获取数据\r\n//getter => 读取数据 通过传入 state.xxx 对方法、函数获取\r\ngetters:{\r\n  //获取登录状态\r\n  getStorage(state){\r\n    if(!state.user){\r\n      state.user=JSON.parse(localStorage.getItem(key))//获取缓存中的数据\r\n    }\r\n    return state.user\r\n  },\r\n  getCartCount:function(state){\r\n   return state.cartCount;\r\n }\r\n},\r\n//应用mutations\r\nactions: {\r\n\r\n}\r\n})\r\n    //vuex中全局共享的数据 \r\n  // state:{cartCount:0},\r\n  // //修改vuex中全局共享的数据\r\n  //   mutations:{\r\n  //     clear(state){\r\n  //       state.cartCount = 0;\r\n  //     },\r\n  //   //购物车数量+1\r\n  //     increment(state){\r\n  //       state.cartCount++;\r\n  //     },\r\n  //   //购物车数量增加指定值\r\n  //     updateCount(state){\r\n  //       state.cartCount+=c;\r\n  //     }\r\n  //   },\r\n  // //获取vuex中全局共享的数据\r\n  //   getters:{\r\n  //     getCartCount:function(state){\r\n  //       return state.cartCount;\r\n  //     }\r\n  //   }\r\n\r\n// //验证登录\r\n// router.beforeEach((to,from,next)=>{\r\n//   //获取用户登录成功后存储的登录标志\r\n//   let getFlag=localStorage.getItem(\"Flag\");\r\n//   //如果登录标志存在且为isLogin,即用户已登录\r\n//   if(getFlag===\"isLogin\"){\r\n//     //设置vuex登录状态为已登录\r\n//     store.state.isLogin=true\r\n//     next()\r\n//     //如果已登录，还想进入登录注册界面，则定向会首页\r\n//     if(!to.meta.isLogin){\r\n//      //友好提示\r\n//     //  iView.Message.error('请先退出登录')\r\n//      next({\r\n//        path:'/Center'\r\n//      })\r\n//     }\r\n//   }else{\r\n//     //如果登录标志不存在，即未登录\r\n//     //用户想进入需要登录的页面，则定向回登录界面\r\n//     if(to.meta.isLogin){\r\n//      next({\r\n//        path:'Login'\r\n//      })\r\n//     }else{//进入无需登录的界面，则跳转继续\r\n//       next()\r\n//     }\r\n//   }\r\n// });\r\n//9.将store保存在vue实例中\r\nVue.config.productionTip = false\r\nnew Vue({\r\n  router,\r\n  store,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n"]}]}